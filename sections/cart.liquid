{% comment %}
  This section is used in the cart template to render /cart page with an
  overview of the items in customer's cart.

  https://shopify.dev/docs/storefronts/themes/architecture/templates/cart
{% endcomment %}

<div class="cart-page">
  <div class="cart-header">
    <a href="{{ routes.all_products_collection_url }}" class="continue-shopping">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="m15 18-6-6 6-6"/>
      </svg>
      {{ 'cart.continue_shopping' | t }}
    </a>
    <h1 class="cart-title">{{ 'cart.title' | t }}</h1>
    <p class="cart-count">{{ 'cart.item_count' | t: count: cart.item_count }}</p>
  </div>

  {% if cart.item_count == 0 %}
    <div class="cart-empty">
      <h2>{{ 'cart.empty_title' | t }}</h2>
      <p>{{ 'cart.empty_description' | t }}</p>
      <a href="{{ routes.all_products_collection_url }}" class="btn btn-primary">
        {{ 'cart.start_shopping' | t }}
      </a>
    </div>
  {% else %}
    <div class="cart-content">
      <div class="cart-items">
        <form action="{{ routes.cart_url }}" method="post" id="cart-form">
          {% for item in cart.items %}
            <div class="cart-item" data-line-item-key="{{ item.key }}">
              <div class="cart-item__image">
                {% render 'image', image: item.image, url: item.url, width: 120, height: 120 %}
              </div>
              
              <div class="cart-item__details">
                <h3 class="cart-item__title">
                  <a href="{{ item.url }}">{{ item.product.title }}</a>
                </h3>
                {% if item.variant.title != 'Default Title' %}
                  <p class="cart-item__variant">{{ item.variant.title }}</p>
                {% endif %}
                {% if item.properties.size > 0 %}
                  {% for property in item.properties %}
                    {% unless property.last == blank %}
                      <p class="cart-item__property">
                        {{ property.first }}: {{ property.last }}
                      </p>
                    {% endunless %}
                  {% endfor %}
                {% endif %}
              </div>

              <div class="cart-item__quantity">
                <div class="quantity-selector">
                  <button type="button" class="quantity-btn quantity-decrease" data-decrease="{{ forloop.index }}">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M5 12h14"/>
                    </svg>
                  </button>
                  <input 
                    type="number" 
                    name="updates[]" 
                    value="{{ item.quantity }}" 
                    min="0" 
                    class="quantity-input"
                    data-line="{{ forloop.index }}"
                  >
                  <button type="button" class="quantity-btn quantity-increase" data-increase="{{ forloop.index }}">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M12 5v14m-7-7h14"/>
                    </svg>
                  </button>
                </div>
              </div>

              <div class="cart-item__price">
                <span class="cart-item__final-price">{{ item.final_line_price | money }}</span>
                {% if item.original_line_price != item.final_line_price %}
                  <span class="cart-item__original-price">{{ item.original_line_price | money }}</span>
                {% endif %}
              </div>

              <div class="cart-item__remove">
                <button type="button" class="remove-item" data-href="{{ item.url_to_remove }}">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M3 6h18M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2m3 0v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6h14"/>
                  </svg>
                </button>
              </div>
            </div>
          {% endfor %}
        </form>
      </div>

      <div class="cart-summary">
        <div class="order-summary">
          <h2 class="order-summary__title">{{ 'cart.order_summary' | t }}</h2>
          
          <div class="order-summary__line">
            <span>{{ 'cart.subtotal' | t }}</span>
            <span>{{ cart.total_price | money }}</span>
          </div>
          
          {% if cart.total_discounts > 0 %}
            <div class="order-summary__line order-summary__discount">
              <span>{{ 'cart.savings' | t }}</span>
              <span>-{{ cart.total_discounts | money }}</span>
            </div>
          {% endif %}

          <div class="order-summary__line">
            <span>{{ 'cart.shipping' | t }}</span>
            <span>{{ 'cart.calculated_at_checkout' | t }}</span>
          </div>

          <div class="order-summary__total">
            <span>{{ 'cart.total' | t }}</span>
            <span>{{ cart.total_price | money }}</span>
          </div>

          <p class="order-summary__note">{{ 'cart.taxes_and_shipping_note' | t }}</p>

          <button type="submit" name="add" class="btn btn-checkout" form="cart-form">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            {{ 'cart.checkout' | t }}
          </button>

          <p class="checkout-security">{{ 'cart.secure_checkout' | t }}</p>
        </div>
      </div>
    </div>
  {% endif %}
</div>

{% stylesheet %}
  .cart-page {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  }

  .cart-header {
    margin-bottom: 2rem;
  }

  .continue-shopping {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: #666;
    text-decoration: none;
    font-size: 0.9rem;
    margin-bottom: 1rem;
    transition: color 0.2s ease;
  }

  .continue-shopping:hover {
    color: #333;
  }

  .cart-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0 0 0.5rem 0;
    color: #333;
  }

  .cart-count {
    color: #666;
    margin: 0;
    font-size: 1rem;
  }

  .cart-empty {
    text-align: center;
    padding: 4rem 1rem;
  }

  .cart-empty h2 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: #333;
  }

  .cart-empty p {
    color: #666;
    margin-bottom: 2rem;
  }

  .cart-content {
    display: grid;
    grid-template-columns: 1fr 400px;
    gap: 3rem;
    align-items: start;
  }

  .cart-items {
    background: #fff;
  }

  .cart-item {
    display: grid;
    grid-template-columns: 120px 1fr auto auto auto;
    gap: 1.5rem;
    align-items: center;
    padding: 1.5rem 0;
    border-bottom: 1px solid #eee;
  }

  .cart-item:last-child {
    border-bottom: none;
  }

  .cart-item__image {
    width: 120px;
    height: 120px;
    border-radius: 8px;
    overflow: hidden;
    background: #f8f9fa;
  }

  .cart-item__image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .cart-item__details {
    min-width: 0;
  }

  .cart-item__title {
    margin: 0 0 0.5rem 0;
    font-size: 1.1rem;
    font-weight: 600;
  }

  .cart-item__title a {
    color: #333;
    text-decoration: none;
  }

  .cart-item__title a:hover {
    color: #ff6b35;
  }

  .cart-item__variant {
    color: #666;
    font-size: 0.9rem;
    margin: 0 0 0.25rem 0;
  }

  .cart-item__property {
    color: #666;
    font-size: 0.85rem;
    margin: 0.25rem 0;
  }

  .quantity-selector {
    display: flex;
    align-items: center;
    border: 1px solid #ddd;
    border-radius: 6px;
    overflow: hidden;
  }

  .quantity-btn {
    background: #f8f9fa;
    border: none;
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  .quantity-btn:hover {
    background: #e9ecef;
  }

  .quantity-input {
    border: none;
    width: 50px;
    height: 36px;
    text-align: center;
    font-size: 0.9rem;
    background: #fff;
    outline: none;
  }

  .cart-item__price {
    text-align: right;
  }

  .cart-item__final-price {
    font-size: 1.1rem;
    font-weight: 600;
    color: #333;
  }

  .cart-item__original-price {
    display: block;
    font-size: 0.9rem;
    color: #999;
    text-decoration: line-through;
    margin-top: 0.25rem;
  }

  .cart-item__remove {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .remove-item {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    color: #999;
    transition: color 0.2s ease;
  }

  .remove-item:hover {
    color: #dc3545;
  }

  .cart-summary {
    position: sticky;
    top: 2rem;
  }

  .order-summary {
    background: #fff;
    border: 1px solid #eee;
    border-radius: 12px;
    padding: 2rem;
  }

  .order-summary__title {
    font-size: 1.3rem;
    font-weight: 600;
    margin: 0 0 1.5rem 0;
    color: #333;
  }

  .order-summary__line {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    font-size: 0.95rem;
  }

  .order-summary__discount {
    color: #28a745;
  }

  .order-summary__total {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 1rem;
    border-top: 1px solid #eee;
    font-size: 1.2rem;
    font-weight: 600;
    color: #333;
    margin-bottom: 1rem;
  }

  .order-summary__note {
    font-size: 0.85rem;
    color: #666;
    margin: 0 0 2rem 0;
    text-align: center;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 6px;
    font-size: 1rem;
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .btn-primary {
    background: #ff6b35;
    color: white;
  }

  .btn-primary:hover {
    background: #e55a2b;
    transform: translateY(-1px);
  }

  .btn-checkout {
    background: #ff6b35;
    color: white;
    width: 100%;
    padding: 1rem;
    font-size: 1.1rem;
    font-weight: 600;
  }

  .btn-checkout:hover {
    background: #e55a2b;
    transform: translateY(-1px);
  }

  .checkout-security {
    text-align: center;
    font-size: 0.85rem;
    color: #666;
    margin: 1rem 0 0 0;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .cart-page {
      padding: 1rem;
    }

    .cart-title {
      font-size: 2rem;
    }

    .cart-content {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .cart-item {
      grid-template-columns: 80px 1fr;
      grid-template-rows: auto auto auto;
      gap: 1rem;
    }

    .cart-item__image {
      width: 80px;
      height: 80px;
      grid-row: 1 / 3;
    }

    .cart-item__details {
      grid-column: 2;
    }

    .cart-item__quantity,
    .cart-item__price,
    .cart-item__remove {
      grid-column: 1 / -1;
      justify-self: start;
    }

    .cart-item__quantity {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .cart-item__price {
      text-align: left;
    }

    .order-summary {
      padding: 1.5rem;
    }
  }
{% endstylesheet %}

{% javascript %}
  class CartManager {
    constructor() {
      this.cart = document.querySelector('.cart-page');
      this.form = document.getElementById('cart-form');
      this.bindEvents();
    }

    bindEvents() {
      // Quantity controls
      document.querySelectorAll('.quantity-decrease').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const input = e.target.closest('.cart-item').querySelector('.quantity-input');
          const currentValue = parseInt(input.value);
          if (currentValue > 0) {
            input.value = currentValue - 1;
            this.updateCart();
          }
        });
      });

      document.querySelectorAll('.quantity-increase').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const input = e.target.closest('.cart-item').querySelector('.quantity-input');
          const currentValue = parseInt(input.value);
          input.value = currentValue + 1;
          this.updateCart();
        });
      });

      // Direct input change
      document.querySelectorAll('.quantity-input').forEach(input => {
        input.addEventListener('change', () => {
          this.updateCart();
        });
      });

      // Remove items
      document.querySelectorAll('.remove-item').forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.preventDefault();
          const href = btn.dataset.href;
          this.removeItem(href);
        });
      });
    }

    async updateCart() {
      const formData = new FormData(this.form);
      
      try {
        const response = await fetch('/cart/update.js', {
          method: 'POST',
          body: formData
        });
        
        if (response.ok) {
          window.location.reload();
        }
      } catch (error) {
        console.error('Error updating cart:', error);
      }
    }

    async removeItem(href) {
      try {
        const response = await fetch(href, {
          method: 'POST'
        });
        
        if (response.ok) {
          window.location.reload();
        }
      } catch (error) {
        console.error('Error removing item:', error);
      }
    }
  }

  // Initialize cart manager when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new CartManager();
  });
{% endjavascript %}

{% schema %}
{
  "name": "t:general.cart",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.cart.settings.header"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "t:sections.cart.settings.show_vendor.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_cart_notes",
      "label": "t:sections.cart.settings.show_cart_notes.label",
      "default": true
    }
  ]
}
{% endschema %}
